<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" 
             d:DesignWidth="800" d:DesignHeight="450"
             xmlns:vm="clr-namespace:MPDCtrlX.ViewModels"
			 xmlns:sng="clr-namespace:MPDCtrlX.Models"
             x:Class="MPDCtrlX.Views.QueuePage"
             x:DataType="vm:MainViewModel"
			 xmlns:prop="clr-namespace:MPDCtrlX.Properties"
             x:CompileBindings="True"
			 Name="QueueList">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainDummyViewModel />
	</Design.DataContext>

	<Grid RowDefinitions="Auto,*">

		<!-- Queue page title and menus -->
		<Grid Grid.Row="0" Margin="0,0,0,6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="48"></ColumnDefinition>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			
			<StackPanel Grid.Column="1" Height="48" Spacing="24" Margin="0" Orientation="Horizontal" HorizontalAlignment="Left">
				<!-- page title-->
				<TextBlock Text="Queue" Theme="{DynamicResource TitleTextBlockStyle}" VerticalAlignment="Bottom" Margin="0,0,0,0"/>
				<!-- song count -->
				<TextBlock Theme="{DynamicResource CaptionTextBlockStyle}" VerticalAlignment="Bottom" Padding="0,0,0,4" Opacity="0.7">
					<Run Text="Songs"/>
					<Run Text=": "/>
					<Run Text="{Binding Queue.Count, Mode=OneWay}"/>
				</TextBlock>

			</StackPanel>

			<!-- Page command menu buttons (filter, more) -->
			<StackPanel Grid.Column="2" Height="48" Spacing="6" Margin="0,0,12,0" Orientation="Horizontal" HorizontalAlignment="Right">

				<!-- Search query input box -->
				<StackPanel Orientation="Horizontal">
					<TextBox MinWidth="100" Width="145" IsVisible="{Binding IsChecked, ElementName=TglButtonQueueFilter}" VerticalAlignment="Bottom" Margin="0,0,6,0"></TextBox>
					<ToggleButton Name="TglButtonQueueFilter" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0" Width="34" Height="34">
						<Viewbox Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Bottom">
							<PathIcon Background="Transparent" Width="NaN" Height="NaN"
								Data="M10.0195 10.7266C9.06578 11.5217 7.83875 12 6.5 12C3.46243 12 1 9.53757 1 6.5C1 3.46243 3.46243 1 6.5 1C9.53757 1 12 3.46243 12 6.5C12 7.83875 11.5217 9.06578 10.7266 10.0195L13.8535 13.1464C14.0488 13.3417 14.0488 13.6583 13.8535 13.8536C13.6583 14.0488 13.3417 14.0488 13.1464 13.8536L10.0195 10.7266ZM11 6.5C11 4.01472 8.98528 2 6.5 2C4.01472 2 2 4.01472 2 6.5C2 8.98528 4.01472 11 6.5 11C8.98528 11 11 8.98528 11 6.5Z">
							</PathIcon>
						</Viewbox>
					</ToggleButton>
				</StackPanel>

				<SplitButton VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0" Height="34">
					<Viewbox Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Bottom">
						<PathIcon Background="Transparent" Width="NaN" Height="NaN"
							Data="M4.85355 2.14645C4.65829 1.95118 4.34171 1.95118 4.14645 2.14645L1.14645 5.14645C0.951184 5.34171 0.951184 5.65829 1.14645 5.85355C1.34171 6.04882 1.65829 6.04882 1.85355 5.85355L4 3.70711V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V3.70711L7.14645 5.85355C7.34171 6.04882 7.65829 6.04882 7.85355 5.85355C8.04882 5.65829 8.04882 5.34171 7.85355 5.14645L4.85355 2.14645ZM11.1525 13.8595C11.3463 14.0468 11.6537 14.0468 11.8475 13.8595L14.8475 10.9594C15.0461 10.7675 15.0514 10.4509 14.8595 10.2524C14.6676 10.0538 14.351 10.0485 14.1525 10.2404L12 12.3212L12 2.5001C12 2.22395 11.7761 2.0001 11.5 2.0001C11.2239 2.0001 11 2.22395 11 2.5001L11 12.3212L8.84752 10.2404C8.64898 10.0485 8.33244 10.0538 8.14051 10.2524C7.94858 10.4509 7.95394 10.7675 8.15248 10.9594L11.1525 13.8595Z">
						</PathIcon>
					</Viewbox>
					<SplitButton.Flyout>
						<MenuFlyout Placement="Bottom">
							<MenuItem Header="Title" IsChecked="True">
								<MenuItem.Icon>
									<Path Data="M13.8639 3.65511C14.0533 3.85606 14.0439 4.17251 13.8429 4.36191L5.91309 11.8358C5.67573 12.0595 5.30311 12.0526 5.07417 11.8203L2.39384 9.09995C2.20003 8.90325 2.20237 8.58667 2.39907 8.39286C2.59578 8.19905 2.91235 8.2014 3.10616 8.3981L5.51192 10.8398L13.1571 3.63419C13.358 3.44479 13.6745 3.45416 13.8639 3.65511Z"
										IsVisible="{Binding $parent[MenuItem].IsChecked}" Fill="{DynamicResource ComboBoxDropDownGlyphForeground}"/>
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="Album" />
							<MenuItem Header="Artist" />
							<MenuItem Header="Genre" />
							<MenuItem Header="Last modified" />
						</MenuFlyout>
					</SplitButton.Flyout>
				</SplitButton>

				<!-- More options button -->
				<Button Margin="0,0,0,0" Width="34" Height="34" HorizontalAlignment="Left" VerticalAlignment="Bottom">
					<Viewbox Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Bottom">
						<PathIcon Background="Transparent" Width="NaN" Height="NaN"
							Data="M10 6C9.30964 6 8.75 5.44036 8.75 4.75C8.75 4.05964 9.30964 3.5 10 3.5C10.6904 3.5 11.25 4.05964 11.25 4.75C11.25 5.44036 10.6904 6 10 6ZM10 11.25C9.30964 11.25 8.75 10.6904 8.75 10C8.75 9.30964 9.30964 8.75 10 8.75C10.6904 8.75 11.25 9.30964 11.25 10C11.25 10.6904 10.6904 11.25 10 11.25ZM8.75 15.25C8.75 15.9404 9.30964 16.5 10 16.5C10.6904 16.5 11.25 15.9404 11.25 15.25C11.25 14.5596 10.6904 14 10 14C9.30964 14 8.75 14.5596 8.75 15.25Z">
						</PathIcon>
					</Viewbox>
					<Button.Flyout>
						<MenuFlyout>
							<MenuItem Header="{x:Static prop:Resources.QueueMenu_ScrollIntoNowPlaying}" Command="{Binding ScrollIntoNowPlayingCommand}" InputGesture="Ctrl+J"/>
							<Separator/>
							<MenuItem Header="{x:Static prop:Resources.QueueMenu_QueueSaveAsPlaylist}" Command="{Binding QueueSaveAsCommand}"/>
							<MenuItem Header="{x:Static prop:Resources.QueueMenu_QueueSaveToPlaylist}" Command="{Binding QueueSaveToCommand}"/>
							<Separator/>
							<MenuItem Header="{x:Static prop:Resources.QueueMenu_QueueClear}" Command="{Binding QueueClearWithoutPromptCommand}"/>
						</MenuFlyout>
					</Button.Flyout>
				</Button>

			</StackPanel>
		</Grid>

		<!-- Queue ListBox  Margin="16,4,0,0"-->
		<Grid Grid.Row="1" RowDefinitions="1,Auto,1,*">
			<Border Grid.Row="0" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" Opacity="0.6"></Border>
			<ScrollViewer Grid.Row="1" x:Name="QueueListViewHeaderScrollViewer" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
				<!-- This is a workaround to keep the header in sync with the ListBox scrolling. -->
				<Grid Height="34" Margin="1,0,0,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="28"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>

						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="*"></ColumnDefinition>
					</Grid.ColumnDefinitions>

					<Grid Grid.Column="0" Name="Column1" IsVisible="False">
						<Label Name="Column1X" Opacity="1" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column1}">#</Label>
					</Grid>

					<GridSplitter Grid.Column="1" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns" IsVisible="False"/>
					<Grid Grid.Column="2" Name="Column2">
						<Label Name="Column2X" Opacity="0.7" HorizontalAlignment="Left" Padding="0,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column2}"></Label>
					</Grid>

					<Border Grid.Column="3" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" MaxWidth="4"/>
					<GridSplitter Grid.Column="3" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns" MaxWidth="4" IsVisible="False"/>
					<Grid Grid.Column="4" Name="Column3">
						<Label Name="Column3X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Content="{x:Static prop:Resources.QueueListviewColumnHeader_Title}" Width="{Binding Bounds.Size.Width, ElementName=Column3}"></Label>
					</Grid>

					<GridSplitter Grid.Column="5" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns" MaxWidth="4"/>
					<Grid Grid.Column="6" Name="Column4">
						<Label Name="Column4X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column4}">Time</Label>
					</Grid>

					<GridSplitter Grid.Column="7" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>
					<Grid Grid.Column="8" Name="Column5">
						<Label Name="Column5X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column5}">Artist</Label>
					</Grid>

					<GridSplitter Grid.Column="9" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>
					<Grid Grid.Column="10" Name="Column6">
						<Label Name="Column6X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column6}">Album</Label>
					</Grid>

					<GridSplitter Grid.Column="11" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>
					<Grid Grid.Column="12" Name="Column7">
						<Label Name="Column7X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column7}">Disc</Label>
					</Grid>

					<GridSplitter Grid.Column="13" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>
					<Grid Grid.Column="14" Name="Column8">
						<Label Name="Column8X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column8}">Track</Label>
					</Grid>

					<GridSplitter Grid.Column="15" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>
					<Grid Grid.Column="16" Name="Column9">
						<Label Name="Column9X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column9}">Genre</Label>
					</Grid>

					<GridSplitter Grid.Column="17" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>
					<Grid Grid.Column="18" Name="Column10">
						<Label Name="Column10X" Opacity="0.7" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center" Width="{Binding Bounds.Size.Width, ElementName=Column10}">LastModified</Label>
					</Grid>

					<GridSplitter Grid.Column="19" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>
					<Grid Grid.Column="20" Name="Column11" MinWidth="24">

					</Grid>

				</Grid>
			</ScrollViewer>
			<Border Grid.Row="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" Opacity="0.5"></Border>
			<ListBox Grid.Row="3" Name="QueueListBox" ItemsSource="{Binding Queue}" SelectedItem="{Binding SelectedQueueSong}" SelectionMode="AlwaysSelected,Multiple" DoubleTapped="QueueListBox_DoubleTapped" BorderThickness="0" Margin="0,3,0,4" ScrollViewer.AllowAutoHide="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" Loaded="ListBox_Loaded">
				<ListBox.Resources>
					<!-- This is a workaround to keep the header in sync with the ListBox scrolling. Added ScrollChanged="ScrollViewer_ScrollChanged" -->
					<ControlTheme x:Key="{x:Type ListBox}" TargetType="ListBox">
						<Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
						<Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
						<Setter Property="BorderBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
						<Setter Property="BorderThickness" Value="{DynamicResource ListBoxBorderThemeThickness}" />
						<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
						<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
						<Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
						<Setter Property="ScrollViewer.IsScrollInertiaEnabled" Value="True" />
						<Setter Property="Template">
							<ControlTemplate>
								<Border Name="border"
										ClipToBounds="{TemplateBinding ClipToBounds}"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="{TemplateBinding CornerRadius}">
									<ScrollViewer Name="PART_ScrollViewer"
												  ScrollChanged="ScrollViewer_ScrollChanged"
												  VerticalSnapPointsType="{TemplateBinding (ScrollViewer.VerticalSnapPointsType)}"
												  HorizontalSnapPointsType="{TemplateBinding (ScrollViewer.HorizontalSnapPointsType)}"
												  HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
												  VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
												  IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
												  IsScrollInertiaEnabled="{TemplateBinding (ScrollViewer.IsScrollInertiaEnabled)}"
												  IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
												  AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
												  BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}">
										<ItemsPresenter Name="PART_ItemsPresenter"
														ItemsPanel="{TemplateBinding ItemsPanel}"
														Margin="{TemplateBinding Padding}"/>
									</ScrollViewer>
								</Border>
							</ControlTemplate>
						</Setter>
					</ControlTheme>
				</ListBox.Resources>
				<!--  Background="{DynamicResource LayerFillColorDefaultBrush}" -->
				<ListBox.KeyBindings>
					<!--  Enter  -->
					<KeyBinding Command="{Binding QueueListviewEnterKeyCommand}" Gesture="Enter" />
				</ListBox.KeyBindings>
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<VirtualizingStackPanel />
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.ItemTemplate>
					<DataTemplate x:DataType="sng:SongInfoEx">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="28"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>

								<ColumnDefinition Width="4"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<!-- Width="{Binding Width, ElementName=test3}" MinWidth="{Binding MinWidth, ElementName=test3}" MaxWidth="{Binding MaxWidth, ElementName=test3}" -->
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0" Width="{Binding Bounds.Size.Width, ElementName=Column1}" Text="{Binding IndexPlusOne}" HorizontalAlignment="Left" Margin="0" Padding="0,0,0,0" Opacity="0.9" IsVisible="False"></TextBlock>
							<Viewbox Grid.Column="2" Width="14" Height="14" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center">
								<PathIcon Data="M296.494737,3608.57322 L292.500752,3606.14219 C291.83208,3605.73542 291,3606.25002 291,3607.06891 L291,3611.93095 C291,3612.7509 291.83208,3613.26444 292.500752,3612.85767 L296.494737,3610.42771 C297.168421,3610.01774 297.168421,3608.98319 296.494737,3608.57322" Width="NaN" Height="NaN" Foreground="{DynamicResource AccentFillColorDefaultBrush}" Margin="0" Padding="0">
									<Interaction.Behaviors>
										<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
											<ChangePropertyAction PropertyName="IsVisible" Value="True" />
										</DataTriggerBehavior>
										<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
											<ChangePropertyAction PropertyName="IsVisible" Value="False" />
										</DataTriggerBehavior>
									</Interaction.Behaviors>
								</PathIcon>
							</Viewbox>
							<TextBlock Grid.Column="4" Width="{Binding Bounds.Size.Width, ElementName=Column3}" Text="{Binding Title}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>
							<TextBlock Grid.Column="6" Width="{Binding Bounds.Size.Width, ElementName=Column4}" Text="{Binding TimeFormated}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>
							<TextBlock Grid.Column="8" Width="{Binding Bounds.Size.Width, ElementName=Column5}" Text="{Binding Artist}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>
							<TextBlock Grid.Column="10" Width="{Binding Bounds.Size.Width, ElementName=Column6}" Text="{Binding Album}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>
							<TextBlock Grid.Column="12" Width="{Binding Bounds.Size.Width, ElementName=Column7}" Text="{Binding Disc}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>
							<TextBlock Grid.Column="14" Width="{Binding Bounds.Size.Width, ElementName=Column8}" Text="{Binding Track}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>
							<TextBlock Grid.Column="16" Width="{Binding Bounds.Size.Width, ElementName=Column9}" Text="{Binding Genre}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>
							<TextBlock Grid.Column="18" Width="{Binding Bounds.Size.Width, ElementName=Column10}" Text="{Binding LastModifiedFormated}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								<Interaction.Behaviors>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
										<ChangePropertyAction PropertyName="FontWeight" Value="SemiBold" />
									</DataTriggerBehavior>
									<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
										<ChangePropertyAction PropertyName="FontWeight" Value="Normal" />
									</DataTriggerBehavior>
								</Interaction.Behaviors>
							</TextBlock>

						</Grid>
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ListBox.Styles>
					<Style Selector="ListBoxItem" x:DataType="sng:SongInfoEx">
						<Setter Property="Height" Value="36"/>
						<Setter Property="MinHeight" Value="32"/>
						<Setter Property="Padding" Value="0,0,0,0"/>
						<Setter Property="VerticalAlignment" Value="Center"/>
						<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
						<Setter Property="ContextMenu">
							<Setter.Value>
								<ContextMenu>
									<MenuItem Header="{x:Static prop:Resources.QueueItemContextMenu_Play}" InputGesture="Enter" Command="{Binding Path=$parent[ListBox].((vm:MainViewModel)DataContext).QueueListviewLeftDoubleClickCommand}" CommandParameter="{Binding $parent[ListBox].SelectedItem}"/>
									<Separator/>
									<!-- Save -->
									<MenuItem Header="{x:Static prop:Resources.QueueItemContextMenu_SaveSelectedAs}"/>
									<MenuItem Header="{x:Static prop:Resources.QueueItemContextMenu_SaveSelectedTo}"/>

									<Separator/>
									<MenuItem Header="{x:Static prop:Resources.QueueItemContextMenu_Remove}" InputGesture="Ctrl+Delete" Command="{Binding Path=$parent[ListBox].((vm:MainViewModel)DataContext).QueueListviewDeleteWithoutPromptCommand}" CommandParameter="{Binding $parent[ListBox].SelectedItems}"/>
								</ContextMenu>

							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.Styles>
				<!--
				<ListBox.ItemContainerTheme>
					<ControlTheme TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
						<EventSetter Event="DoubleTapped" Handler="ListBox_DoubleTapped"/>
					</ControlTheme>
				</ListBox.ItemContainerTheme>
				-->
				<!--  
				<ListBox.ItemContainerTheme>
					<ControlTheme TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
						<Setter Property="ContextMenu">
							<Setter.Value>
								<ContextMenu>
									<MenuItem Header="Delete"/>
								</ContextMenu>
							</Setter.Value>
						</Setter>
					</ControlTheme>
				</ListBox.ItemContainerTheme>
				-->
			</ListBox>
		</Grid>

	</Grid>

</UserControl>
