<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:MPDCtrlX.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:ui="using:FluentAvalonia.UI.Controls"
		xmlns:prop="clr-namespace:MPDCtrlX.Properties"
        xmlns:views="clr-namespace:MPDCtrlX.Views"
		xmlns:mod="clr-namespace:MPDCtrlX.Models"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="MPDCtrlX.Views.MainWindow"
		x:DataType="vm:MainViewModel"
        x:CompileBindings="True"
		x:Name="ThisMainWindow"
        Title="MPDCtrlX"
		Icon="/Assets/MPDCtrlX.ico"
		Background="{DynamicResource ThemeBackgroundBrush}"
		Cursor="Arrow" 
		WindowStartupLocation="Manual" 
		MinWidth="530" 
		MinHeight="692" 
		SizeChanged="Window_SizeChanged" 
		Loaded="Window_Loaded" 
		Closing="Window_Closing">
	<!-- Background="Transparent" ExtendClientAreaToDecorationsHint="True" TransparencyLevelHint="AcrylicBlur" -->
	<!-- Icon="avares://MPDCtrlX/Assets/Untitled.ico" -->
	<!-- <views:MainView/> -->
	<Interaction.Behaviors>
		<DataTriggerBehavior Binding="{Binding IsBusy}" ComparisonCondition="Equal" Value="True">
			<ChangePropertyAction PropertyName="Cursor" Value="Wait" />
		</DataTriggerBehavior>
		<DataTriggerBehavior Binding="{Binding IsBusy}" ComparisonCondition="Equal" Value="False">
			<ChangePropertyAction PropertyName="Cursor" Value="Arrow" />
		</DataTriggerBehavior>
		<DataTriggerBehavior Binding="{Binding IsWorking}" ComparisonCondition="Equal" Value="True">
			<ChangePropertyAction PropertyName="Cursor" Value="AppStarting" />
		</DataTriggerBehavior>
		<DataTriggerBehavior Binding="{Binding IsWorking}" ComparisonCondition="Equal" Value="False">
			<ChangePropertyAction PropertyName="Cursor" Value="Arrow" />
		</DataTriggerBehavior>
	</Interaction.Behaviors>
	<Window.KeyBindings>
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Play" />
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Ctrl+Space" />
		<!--
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Space"/>
		-->
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Ctrl+P"/>
		<KeyBinding Command="{Binding PlayCommand}" Gesture="MediaPlayPause" />
		<KeyBinding Command="{Binding PlayCommand}" Gesture="MediaStop" />
		<KeyBinding Command="{Binding PlayNextCommand}" Gesture="MediaNextTrack" />
		<KeyBinding Command="{Binding PlayNextCommand}" Gesture="Ctrl+N" />
		<KeyBinding Command="{Binding PlayNextCommand}" Gesture="Ctrl+Right" />
		<KeyBinding Command="{Binding PlayPrevCommand}" Gesture="MediaPreviousTrack" />
		<KeyBinding Command="{Binding PlayPrevCommand}" Gesture="Ctrl+B" />
		<KeyBinding Command="{Binding PlayPrevCommand}" Gesture="Ctrl+Left" />
		<KeyBinding Command="{Binding VolumeMuteCommand}" Gesture="VolumeMute" />
		<KeyBinding Command="{Binding VolumeDownCommand}" Gesture="VolumeDown" />
		<KeyBinding Command="{Binding VolumeDownCommand}" Gesture="Ctrl+OemMinus" />
		<KeyBinding Command="{Binding VolumeDownCommand}" Gesture="Ctrl+Subtract" />
		<KeyBinding Command="{Binding VolumeUpCommand}" Gesture="VolumeUp" />
		<KeyBinding Command="{Binding VolumeUpCommand}" Gesture="Ctrl+OemPlus" />
		<KeyBinding Command="{Binding VolumeUpCommand}" Gesture="Ctrl+Add" />
		<!--
		 Not good for contentdialogs. this steals escape key.
		<KeyBinding Command="{Binding EscapeCommand}" Gesture="Escape" />
		-->
		<KeyBinding Command="{Binding ShowSettingsCommand}" Gesture="Ctrl+S"/>
		<KeyBinding Command="{Binding ShowFindCommand}" Gesture="Ctrl+F"/>
		<!--
		<KeyBinding Gesture="Alt+D" Command="{Binding DevCenterViewActivation}">
			<KeyBinding.CommandParameter>
				<x:Int32>0</x:Int32>
			</KeyBinding.CommandParameter>
		</KeyBinding>
		-->
	</Window.KeyBindings>

	<Grid Background="{DynamicResource LayerFillColorBaseBrush}">
		<!-- Navigation menu -->
		<ui:NavigationView Name="NavigateViewControl" MenuItemsSource="{Binding MainMenuItems, Mode=OneWay}" MenuItemTemplate="{StaticResource NavigationViewMenuItem}" Loaded="NavigationView_Loaded" SelectionFollowsFocus="False" ItemInvoked="NavigationView_ItemInvoked" SelectionChanged="NavigationView_SelectionChanged" IsPaneToggleButtonVisible="True" IsSettingsVisible="True" PaneDisplayMode="Auto" OpenPaneLength="250" IsPaneOpen="{Binding IsNavigationViewMenuOpen, Mode=TwoWay}" Margin="0" ScrollViewer.AllowAutoHide="True" CompactModeThresholdWidth="740" ExpandedModeThresholdWidth="1000" ScrollViewer.VerticalScrollBarVisibility="Visible">
			<!--  NOT GOOD > SelectedItem="{Binding SelectedNodeMenu, Mode=TwoWay}"  SelectedItem="{Binding SelectedNodeMenu, Mode=OneWayToSource}" -->
			<ui:NavigationView.PaneHeader>
			</ui:NavigationView.PaneHeader>
			<ui:NavigationView.PaneCustomContent>
			</ui:NavigationView.PaneCustomContent>
			<ui:NavigationView.PaneFooter>
			</ui:NavigationView.PaneFooter>
			<ui:NavigationView.Resources>
				<DataTemplate x:Key="NavigationViewMenuItem" x:DataType="mod:NodeMenu">
					<ui:NavigationViewItem MenuItemsSource="{Binding Children, Mode=OneWay}" IsExpanded="{Binding Expanded, Mode=TwoWay}" IsSelected="{Binding Selected, Mode=TwoWay}">
						<ui:NavigationViewItem.IconSource>
							<ui:PathIconSource Data="{Binding PathIcon}"/>
						</ui:NavigationViewItem.IconSource>
						<ui:NavigationViewItem.Content>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0">
								<Viewbox Width="15" Height="15" Opacity="1" HorizontalAlignment="Left" Margin="0,0,0,0" IsVisible="False">
									<PathIcon Background="Transparent" Width="NaN" Height="NaN" Margin="0" Padding="0"
										Data="{Binding PathIcon}">
									</PathIcon>
								</Viewbox>
								<TextBlock Text="{Binding Name}" Margin="0,0,0,0"></TextBlock>
							</StackPanel>
						</ui:NavigationViewItem.Content>
					</ui:NavigationViewItem>
				</DataTemplate>
			</ui:NavigationView.Resources>

			<!-- We don't use Navigation frame and Navigate method in Avalonia UI because Avalonia UI does not have a cache mechanism in page navigation... resulting in multiple creation of page instance. -->
			<!-- Use ContentControl in MainView instead. <ui:Frame/> -->
			
		</ui:NavigationView>

	</Grid>

</Window>
