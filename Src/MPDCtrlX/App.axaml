<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Class="MPDCtrlX.App"
			 RequestedThemeVariant="Dark"
			 xmlns:sty="using:FluentAvalonia.Styling">
             <!--  "Default" ThemeVariant follows system theme variant. "Dark" or "Light" are other available options. -->

	<Application.Styles>

		<!--
		<FluentTheme />
		<SimpleTheme/>
		-->
		<!--
		-->
		<sty:FluentAvaloniaTheme PreferUserAccentColor="True" UseSystemFontOnWindows="True"/>
		
		<StyleInclude Source="avares://MPDCtrlX/Styles/Styles.axaml" />
		
	</Application.Styles>

	<Application.Resources>
		<ResourceDictionary>


		
			<ResourceDictionary.MergedDictionaries>

				<ResourceDictionary>
					<ControlTheme x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
						<Setter Property="Background" Value="{DynamicResource MenuFlyoutPresenterBackground}"/>
						<Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutPresenterBorderBrush}"/>
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
						<Setter Property="Focusable" Value="True" />
						<Setter Property="Padding" Value="3" />
						<Setter Property="Template">
							<ControlTemplate>
								<Border Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="{TemplateBinding CornerRadius}">
									<ScrollViewer >
										<ItemsPresenter Name="PART_ItemsPresenter"
														ItemsPanel="{TemplateBinding ItemsPanel}"
														KeyboardNavigation.TabNavigation="Continue" />
									</ScrollViewer>
								</Border>
							</ControlTemplate>
						</Setter>
					</ControlTheme>
				</ResourceDictionary>

				<ResourceDictionary>
					<!-- - - - - - - - - - - - - - - - - - - - - - -->
					<!-- - - - - Pane ToggleButton Style - - - - - -->
					<!-- - - - - - - - - - - - - - - - - - - - - - -->
					<ControlTheme x:Key="PaneToggleButtonStyle" TargetType="Button">
						<Setter Property="FontSize" Value="16" />
						<Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
						<Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
						<Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
						<Setter Property="Padding" Value="4,2" />
						<!-- 
						<Setter Property="Padding" Value="4,2" /> -->
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="VerticalAlignment" Value="Top" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
						<Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
						<Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
						<Setter Property="BorderThickness" Value="{DynamicResource NavigationViewToggleBorderThickness}" />
						<Setter Property="Template">
							<ControlTemplate>
								<Border Name="LayoutRoot"
										Background="{TemplateBinding Background}"
										Margin="{TemplateBinding Padding}"
										Height="{TemplateBinding MinHeight}"
										HorizontalAlignment="Stretch"
										CornerRadius="{DynamicResource ControlCornerRadius}">
									<Grid Name="ContentRoot"
										  ColumnDefinitions="Auto,*">
										<Grid.RowDefinitions>
											<RowDefinition Height="{DynamicResource PaneToggleButtonHeightGridLength}" />
										</Grid.RowDefinitions>

										<Border Width="{TemplateBinding MinWidth}">
											<Viewbox Name="IconHost"
													 Width="16"
													 Height="16"
													 HorizontalAlignment="Center"
													 VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
												<TextBlock Name="Icon"
														   Text="&#xE700;"
														   FontSize="{TemplateBinding FontSize}"
														   RenderTransform="none">
													<TextBlock.Transitions>
														<Transitions>
															<TransformOperationsTransition Duration="00:00:00.083"
																						   Property="RenderTransform" />
														</Transitions>
													</TextBlock.Transitions>
												</TextBlock>
											</Viewbox>
										</Border>

										<ContentPresenter Name="ContentPresenter"
														  VerticalContentAlignment="Center"
														  Content="{TemplateBinding Content}"
														  FontSize="{TemplateBinding FontSize}"
														  Padding="4,0,0,0"
														  Grid.Column="1" />

									</Grid>
								</Border>
							</ControlTemplate>
						</Setter>

						<Style Selector="^:pointerover">
							<Style Selector="^ /template/ Border#LayoutRoot">
								<Setter Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPointerOver}" />
							</Style>
							<Style Selector="^ /template/ ContentPresenter#ContentPresenter">
								<Setter Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
							</Style>
							<Style Selector="^ /template/ TextBlock#Icon">
								<Setter Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
							</Style>
						</Style>

						<Style Selector="^:pressed">
							<Style Selector="^ /template/ Border#LayoutRoot">
								<Setter Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPressed}" />
							</Style>
							<Style Selector="^ /template/ ContentPresenter#ContentPresenter">
								<Setter Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
							</Style>
							<!-- WinUI uses AnimatedIcon here, but we can fake that by using simple scale transform -->
							<Style Selector="^ /template/ TextBlock#Icon">
								<Setter Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
								<Setter Property="RenderTransform" Value="scaleX(0.5)" />
							</Style>
						</Style>

						<Style Selector="^:disabled">
							<Style Selector="^ /template/ Border#LayoutRoot">
								<Setter Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundDisabled}" />
							</Style>
							<Style Selector="^ /template/ ContentPresenter#ContentPresenter">
								<Setter Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundDisabled}" />
							</Style>
						</Style>

						<!-- Skipping Checked states in WinUI template, these are unused & likely for preservation -->
					</ControlTheme>

				</ResourceDictionary>

			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Application.Resources>

</Application>
